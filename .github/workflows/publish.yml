name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  install_dependencies:
    name: Install Project Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Bun Package Manager
        uses: oven-sh/setup-bun@v2

      - name: Install Project Dependencies
        run: bun install

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

  build_library:
    name: Build Project Library
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Bun Package Manager
        uses: oven-sh/setup-bun@v2

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache Build Output Directory
        uses: actions/cache@v3
        with:
          path: |
            dist
          key: ${{ runner.os }}-dist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dist-

      - name: Build the Project
        run: bun run build

  run_tests:
    name: Execute Test Suite
    runs-on: ubuntu-latest
    needs: build_library
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Bun Package Manager
        uses: oven-sh/setup-bun@v2

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Cache Build Output Directory
        uses: actions/cache@v3
        with:
          path: |
            dist
          key: ${{ runner.os }}-dist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dist-

      - name: Install Dependencies for Example Project
        run: |
          cd example
          rm -rf node_modules
          bun install

      - name: Generate Prisma Client
        run: |
          cd example
          bunx prisma generate

      - name: Run Test Suite
        env:
          REDIS_SERVICE_URI: ${{ secrets.REDIS_SERVICE_URI }}
          POSTGRES_SERVICE_URI: ${{ secrets.POSTGRES_SERVICE_URI }}
        run: bun test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # publish_to_npm:
  #   name: Publish Package to NPM
  #   runs-on: ubuntu-latest
  #   needs: run_tests
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Set Up Bun Package Manager
  #       uses: oven-sh/setup-bun@v2

  #     - name: Publish Package to NPM
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  #       run: bun publish
